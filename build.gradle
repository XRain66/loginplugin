plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'velocity'
        url = 'https://repo.velocitypowered.com/snapshots/'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    // Velocity API
    annotationProcessor 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    
    // 添加必要的依赖
    implementation 'com.google.inject:guice:5.1.0'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'net.kyori:adventure-api:4.14.0'
    implementation 'net.kyori:adventure-text-minimessage:4.14.0'
    implementation 'com.google.guava:guava:31.1-jre'
    
    // Configurate
    implementation 'org.spongepowered:configurate-core:4.1.2'
    implementation 'org.spongepowered:configurate-yaml:4.1.2'
    
    implementation 'javax.inject:javax.inject:1'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    filesMatching('velocity-plugin.json') {
        expand(
            'version': project.version,
            'name': project.name,
            'group': project.group
        )
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    archiveBaseName.set(project.name)
    archiveClassifier.set('')
    
    // 重定位依赖，避免冲突
    relocate 'com.google.inject', 'com.example.authplugin.lib.guice'
    relocate 'com.google.guava', 'com.example.authplugin.lib.guava'
    relocate 'org.slf4j', 'com.example.authplugin.lib.slf4j'
    relocate 'net.kyori', 'com.example.authplugin.lib.kyori'
    relocate 'org.spongepowered', 'com.example.authplugin.lib.spongepowered'
    relocate 'javax.inject', 'com.example.authplugin.lib.javax.inject'
    
    minimize()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

build.dependsOn shadowJar 